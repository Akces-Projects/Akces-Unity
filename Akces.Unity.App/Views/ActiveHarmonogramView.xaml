<UserControl x:Class="Akces.Unity.App.Views.ActiveHarmonogramView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:style="clr-namespace:Akces.Wpf.Extensions.Style;assembly=Akces.Wpf"
             xmlns:converters="clr-namespace:Akces.Unity.App.Converters"
             xmlns:local="clr-namespace:Akces.Unity.App"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:viewmodels="clr-namespace:Akces.Unity.App.ViewModels"
             d:DataContext="{d:DesignInstance Type=viewmodels:ActiveHarmonogramViewModel}"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="1200">

    <UserControl.Resources>
        <converters:BoolToVisibility x:Key="boolToVisibility"/>
        <converters:IsHarmonogramPositionNotWorking x:Key="isHarmonogramPositionNotWorking"/>
        <converters:IsHarmonogramPositionWorking x:Key="isHarmonogramPositionWorking"/>
        <local:BindingProxy x:Key="Proxy" Data="{Binding}" />
    </UserControl.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="46"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Text="Lista aktywnych zadań">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="FontSize" Value="22"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Background" Value="#eeeeee"/>
                    <Setter Property="FontWeight" Value="DemiBold"/>
                    <Setter Property="Padding" Value="26,12,12,12"/>
                    <Setter Property="Foreground" Value="{style:AkcesStyle ResourceKey=ThemeColor}"/>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <Grid Margin="20,0,0,0"
              Grid.Row="1"
              Background="White"
              Height="40">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="10"/>
            </Grid.ColumnDefinitions>

            <TextBlock FontSize="16"
                       VerticalAlignment="Center"
                       FontWeight="SemiBold"
                       IsEnabled="{Binding IsWorkerEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Text" Value="Wykonywanie zadań jest aktywne"/>
                                <Setter Property="Foreground" Value="Green"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Text" Value="Wykonywanie zadań jest zatrzymane"/>
                                <Setter Property="Foreground" Value="OrangeRed"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <StackPanel Grid.Column="2"
                        Visibility="{Binding IsWorkerNotEnabled, Converter={StaticResource boolToVisibility}}"
                        Orientation="Horizontal" 
                        Margin="0,0,10,0">
                
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#bee6fd"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                
                <Button Style="{StaticResource menuButton}" Content="Wznów" Command="{Binding StartWorkerCommand}"/>
                <fa:ImageAwesome Margin="5,0,0,0" Icon="PlayCircle" Width="18" Foreground="{style:AkcesStyle ResourceKey=ThemeColor}" VerticalAlignment="Center"/>
            </StackPanel>

            <StackPanel Grid.Column="2"
                        Visibility="{Binding IsWorkerEnabled, Converter={StaticResource boolToVisibility}}"
                        Orientation="Horizontal" 
                        Margin="0,0,10,0">

                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#bee6fd"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <Button Style="{StaticResource menuButton}" Content="Zatrzymaj" Command="{Binding StopWorkerCommand}"/>
                <fa:ImageAwesome Margin="5,0,0,0" Icon="StopCircle" Width="18" Foreground="OrangeRed" VerticalAlignment="Center"/>
            </StackPanel>

            <StackPanel Grid.Column="4"
                        Orientation="Horizontal" 
                        Margin="0,0,10,0">

                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#bee6fd"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <Button Style="{StaticResource menuButton}" Content="Pokaż ostatni raport" Command="{Binding ShowReportCommand}"/>
                <fa:ImageAwesome Margin="5,0,0,0" Icon="FileText" Width="18" Foreground="{style:AkcesStyle ResourceKey=ThemeColor}" VerticalAlignment="Center"/>
            </StackPanel>

            <TextBlock Grid.Column="6"
                       Height="30"
                       VerticalAlignment="Center"
                       FontSize="18">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}Aktywny harmonogram:  {0}">
                        <Binding Path="ActiveHarmonogram.Name"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </Grid>

        <Grid Grid.Row="2" Background="#eeeeee">
            <TextBox Text="{Binding Searchstring, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="18"
                     Height="30"
                     VerticalContentAlignment="Center"
                     Padding="5,0,0,0"
                     VerticalAlignment="Center"
                     HorizontalAlignment="Stretch" 
                     x:Name="SearchTermTextBox" 
                     Margin="5"/>

            <TextBlock IsHitTestVisible="False" Text="Wyszukaj..." FontSize="16" Padding="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="DarkGray">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Text, ElementName=SearchTermTextBox}" Value="">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>

        <DataGrid ItemsSource="{Binding HarmonogramPositions}" 
                  Grid.Row="3"
                  SelectedItem="{Binding SelectedPosition}"
                  AutoGenerateColumns="False" 
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  RowHeight="37">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Typ operacji" Width="220" SortMemberPath="HarmonogramOperation">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding HarmonogramOperation}" Padding="30,4,4,4"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Konto" Width="220" SortMemberPath="Account.Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Account.Name}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Opis" Width="*" SortMemberPath="Description">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Description}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Pierwsze uruchomienie" Width="190" SortMemberPath="StartTime">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding StartTime}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Ostatnie uruchomienie" Width="190" SortMemberPath="LastLaunchTime">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Text="{Binding LastLaunchTime, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBlock.Visibility>
                                        <MultiBinding Converter="{StaticResource isHarmonogramPositionNotWorking}">
                                            <Binding Path="Id"/>
                                            <Binding Source="{StaticResource Proxy}" Path="Data.CurrentWorkingPositionId" />
                                        </MultiBinding>
                                    </TextBlock.Visibility>
                                </TextBlock>

                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Visibility>
                                        <MultiBinding Converter="{StaticResource isHarmonogramPositionWorking}">
                                            <Binding Path="Id" />
                                            <Binding Source="{StaticResource Proxy}" Path="Data.CurrentWorkingPositionId" />
                                        </MultiBinding>
                                    </StackPanel.Visibility>

                                    <TextBlock Text="W trakcie..." FontWeight="SemiBold"/>
                                    <Control Style="{style:AkcesStyle ResourceKey=BusyAnimationStyle}" Width="60" Height="60">
                                        <Control.LayoutTransform>
                                            <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                                        </Control.LayoutTransform>
                                    </Control>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Powtarzaj" Width="80" SortMemberPath="Repeat">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Repeat, UpdateSourceTrigger=PropertyChanged}"
                                      IsEnabled="False"
                                      VerticalAlignment="Center" HorizontalAlignment="Center">
                                <CheckBox.LayoutTransform>
                                    <ScaleTransform ScaleX="1.4" ScaleY="1.4"/>
                                </CheckBox.LayoutTransform>
                            </CheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Po ( min.)" Width="80" SortMemberPath="RepeatAfterMinutes">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock FontSize="17" Text="{Binding RepeatAfterMinutes, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="4" Background="#eeeeee"/>
    </Grid>
</UserControl>
